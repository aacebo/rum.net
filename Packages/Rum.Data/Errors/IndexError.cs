using System.Text.Json.Serialization;

using Rum.Core;

namespace Rum.Data;

public static partial class Errors
{
    /// <summary>
    /// an Error generated by a Rule for a
    /// Collection Index
    /// </summary>
    /// <param name="index">the index</param>
    /// <param name="error">the index error</param>
    public static IError Index(int index, IError error)
    {
        return new IndexError(index, error);
    }

    /// <summary>
    /// an Error generated by a Rule for a
    /// Collection Index
    /// </summary>
    /// <param name="index">the index</param>
    /// <param name="error">the index error</param>
    public class IndexError(int index, IError error) : IError
    {
        /// <summary>
        /// the index of the element that the error
        /// relates to
        /// </summary>
        [JsonPropertyName("index")]
        [JsonPropertyOrder(0)]
        public int Index { get; } = index;

        [JsonPropertyName("error")]
        [JsonPropertyOrder(1)]
        public IError Error { get; } = error;

        public string GetError() => Error.GetError();
    }
}