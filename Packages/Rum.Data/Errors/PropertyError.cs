using System.Text.Json.Serialization;

using Rum.Core;

namespace Rum.Data;

public static partial class Errors
{
    /// <summary>
    /// an Error generated by a Rule for an
    /// Object Property
    /// </summary>
    /// <param name="name">the property name</param>
    /// <param name="error">the error</param>
    public static IError Property(string name, IError error)
    {
        return new PropertyError(name, error);
    }

    /// <summary>
    /// an Error generated by a Rule for an
    /// Object Property
    /// </summary>
    /// <param name="name">the property name</param>
    /// <param name="error">the error</param>
    public class PropertyError(string name, IError error) : IError
    {
        /// <summary>
        /// the name of the property that the error
        /// relates to
        /// </summary>
        [JsonPropertyName("name")]
        [JsonPropertyOrder(0)]
        public string Name { get; } = name;

        /// <summary>
        /// the error
        /// </summary>
        [JsonPropertyName("error")]
        [JsonPropertyOrder(1)]
        public IError Error { get; } = error;

        public string GetError() => Error.GetError();
    }
}