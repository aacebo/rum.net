using System.Text.Json.Serialization;

using Rum.Core;

namespace Rum.Schemas;

public static partial class Errors
{
    /// <summary>
    /// an Error generated by a Rule
    /// </summary>
    /// <param name="rule">the unique rule name/identifier</param>
    /// <param name="message">the error message</param>
    public static IError Rule(string rule, string message)
    {
        return new RuleError(rule, message);
    }

    /// <summary>
    /// an Error generated by a Rule
    /// </summary>
    /// <param name="rule">the unique rule name/identifier</param>
    /// <param name="message">the error message</param>
    public class RuleError(string rule, string message) : IError
    {
        /// <summary>
        /// the name of the rule that produced the error
        /// </summary>
        [JsonPropertyName("rule")]
        [JsonPropertyOrder(0)]
        public string Rule { get; } = rule;

        /// <summary>
        /// the error message
        /// </summary>
        [JsonPropertyName("message")]
        [JsonPropertyOrder(1)]
        public string Message { get; } = message;
    }
}