using System.Text.Json.Serialization;

using Rum.Core;

namespace Rum.Schemas;

public static partial class Errors
{
    /// <summary>
    /// an Error generated by a Rule for an
    /// Object Property
    /// </summary>
    /// <param name="rule">the unique rule name/identifier</param>
    /// <param name="name">the property name</param>
    /// <param name="message">the error message</param>
    public static IError Property(string rule, string name, string message)
    {
        return new PropertyError(rule, name, message);
    }

    /// <summary>
    /// an Error generated by a Rule for an
    /// Object Property
    /// </summary>
    /// <param name="rule">the unique rule name/identifier</param>
    /// <param name="name">the property name</param>
    /// <param name="message">the error message</param>
    public class PropertyError(string rule, string name, string message) : RuleError(rule, message), IError
    {
        /// <summary>
        /// the name of the property that the error
        /// relates to
        /// </summary>
        [JsonPropertyName("name")]
        [JsonPropertyOrder(0)]
        public string Name { get; } = name;
    }
}